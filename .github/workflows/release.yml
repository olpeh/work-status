name: Generate tag and release
on:
  # Deploy from specified branches
  push:
    branches:
      - main
  # Deploy by manual trigger
  workflow_dispatch:
    inputs:
      version:
        description: New version
        required: true
        default: "patch"
        type: choice
        options:
          - patch
          - minor
          - major
  with:
    inputs:
      version: "patch"

jobs:
  version:
    name: Create new version ${{ github.event.inputs.version }}
    runs-on: ubuntu-latest
    # Map the output from the generate_outputs job to the inputs of the release job
    outputs:
      new_tag: ${{ steps.generate_outputs.outputs.new_tag }}
    steps:
      - uses: actions/checkout@v3
      - run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: yarn

      - name: Create branch release
        run: git checkout -b release

      - name: Build
        run: yarn build

      - name: Delete almost everything
        run: |
          find . -maxdepth 1 ! -name 'dist' ! -name 'plugin-update-checker' ! -name 'work-status.php' ! -name '.git' ! -name 'package.json' ! -name '.gitignore' ! -name '.' -exec rm -rf {} +

      - name: Copy dist to root
        run: cp -r dist/* .

      - name: Delete dist
        run: rm -rf dist

      - name: Commit changes
        run: |
          git add .
          git commit -m "chore: version ${{ github.event.inputs.version }}"

      - name: Generate new version part 1
        run: npm version ${{ github.event.inputs.version }}

      - name: get-npm-version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@v1.3.1

      - name: Bump WP-plugin version in work-status.php with the new NPM version
        run: |
          sed -i -e "s/Version: .*/Version: ${{ steps.package-version.outputs.current-version }}/g" work-status.php

      - name: Commit changes
        run: |
          git add .
          git commit -m "chore: version ${{ steps.package-version.outputs.current-version }}"

      - name: Commit work-status.php and package.json to main branch
        run: |
          git checkout main
          git checkout release work-status.php
          git checkout release package.json
          git commit -m "chore: version ${{ steps.package-version.outputs.current-version }}"
          git push origin main
          git checkout release

      - name: Generate new version part 2
        run: npm version ${{ github.event.inputs.version }}

      - name: Push new version tag to repository
        run: git push origin release --tags --force

      - name: Generate outputs
        id: generate_outputs
        run: |
          TAG_NAME=$(git describe --tags --abbrev=0)
          echo "new_tag=${TAG_NAME}" >> $GITHUB_OUTPUT
          echo "Tag name ${TAG_NAME}"

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: version
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Checkout release branch
        run: git checkout -b release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.version.outputs.new_tag }}
          release_name: Release ${{ needs.version.outputs.new_tag }}
          body: Latest release
